# buildout.cfg file for Plone 4 development work
# - for production installations please use http://plone.org/download
# Each part has more information about its recipe on PyPi
# http://pypi.python.org/pypi
# ... just reach by the recipe name
[buildout]
extensions = buildout.dumppickedversions
             mr.developer
dump-picked-versions-file = versions-picked.cfg

allow-picked-versions = true
parts =
    omelette
    instance
    test
    zopepy

extends =
    http://dist.plone.org/release/4.1/versions.cfg

versions = versions

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/release/4.1
    http://dist.plone.org/thirdparty

sources-dir = devel
auto-checkout = 

# Reference any folders where you have Python egg source code under development here
# e.g.: develop = src/my.package
# If you are using the mr.developer extension and have the source code in a
# repository mr.developer will handle this automatically for you
develop = .

[versions]
plone.app.testing = 4.0.2

[sources]

# Create bin/instance command to manage Zope start up and shutdown
[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
debug-mode = off
verbose-security = on
blob-storage = var/blobstorage
environment-vars =
    zope_i18n_compile_mo_files true

eggs =
    Products.AutocompleteWidget
    iw.debug
    Pillow

# Some pre-Plone 3.3 packages may need you to register the package name here in
# order their configure.zcml to be run (http://plone.org/products/plone/roadmap/247)
# - this is never required for packages in the Products namespace (Products.*)
zcml =
    Products.AutocompleteWidget
    iw.debug

products =

# zopepy commands allows you to execute Python scripts using a PYTHONPATH
# including all the configured eggs
[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy

# create bin/test command
[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
eggs =
    Products.AutocompleteWidget [test]
environment = testenv

[testenv]
zope_i18n_compile_mo_files = true

[omelette]
recipe = collective.recipe.omelette
eggs =
    ${test:eggs}
    ${instance:eggs}
